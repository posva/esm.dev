:root {
  --dark: 18, 19, 20;
  --light: 239, 238, 237;

  --red: #e3342f;
  --green: #38c172;
  --blue: #3490dc;
  --indigo: 75, 0, 130;
  --aqua: 127, 255, 212;

  --bgColor: var(--light);
  /* --bgColor: var(--aqua); */
  --textColor: var(--dark);
  --accent: var(--indigo);
  --secondary: crimson;

  --moveOffset: 1.35px;
}

@media (prefers-dark-interface), (prefers-color-scheme: dark) {
  :root {
    --bgColor: var(--dark);
    /* --bgColor: var(--indigo); */
    --textColor: var(--light);
    --accent: var(--aqua);
  }
}

body.dark {
  --bgColor: var(--dark);
  /* --bgColor: var(--indigo); */
  --textColor: var(--light);
  --accent: var(--aqua);
}

#physics {
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: -1;
}

#main {
  width: 48rem;
  max-width: 100%;
}

body {
  box-sizing: border-box;
  position: relative;
  font-family: -apple-system, 'Helvetica Neue', BlinkMacSystemFont, Cantarell,
    'Open Sans', sans-serif;
  font-size: calc(22px + 0.33vw);
  -webkit-font-smoothing: antialiased;
  padding: 5vh 10vw;
  background-color: rgb(var(--bgColor));
  color: rgb(var(--textColor));
  margin: 0;
  min-height: 100vh;
}

::selection {
  color: rgb(var(--bgColor));
  background-color: rgb(var(--textColor));
}

a {
  display: inline-block;
  color: var(--blue);
  position: relative;
  font-weight: 500;
  text-decoration: none;
  transition: color 500ms linear 200ms;

  /* border-bottom: var(--blue) 1px solid; */
}

a::before,
a::after {
  transition: transform 500ms ease-out, opacity 500ms linear;
  /* transition: opacity 300ms ease-out; */
}

a::before,
a::after {
  opacity: 0;
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
}

a:hover::before,
a:hover::after {
  opacity: 0.75;
}

a::before {
  color: var(--red);
}

a::after {
  color: var(--blue);
}

a:hover,
a:focus {
  color: var(--green);
  transition-delay: 0s;
}

a:hover::before,
a:focus::before {
  transform: translate3d(
    var(--moveX, var(--moveOffset)),
    var(--moveY, var(--moveOffset)),
    0
  );
}

a:hover::after,
a:focus::after {
  color: var(--blue);
  transform: translate3d(
    calc(-1 * var(--moveX, var(--moveOffset))),
    calc(-1 * var(--moveY, var(--moveOffset))),
    0
  );
}

#experiment {
  position: fixed;
  top: 0;
  left: 0;
  z-index: -10;
  width: 100vw;
  height: 100vh;
}

#experiment-container {
  z-index: -5;
  background-color: rgba(var(--bgColor), 0.5);
  position: fixed;
  top: 0;
  width: 0;
  height: 0;
}

#experiment-container > span.accent {
  color: rgb(var(--accent));
}

#experiment-container > span.secondary {
  color: rgb(var(--accent));
}

#experiment-container::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  z-index: -5;
  background-color: inherit;
  width: 100vw;
  height: 100vh;
}
